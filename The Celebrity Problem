A celebrity is a person who is known to all but does not know anyone at a party. A party is being organized by some people.  A square matrix mat is used to represent people at the party such that if an element of row i and column j is set to 1 it means ith person knows jth person. You need to return the index of the celebrity in the party, if the celebrity does not exist, return -1.

Note: Follow 0-based indexing.

class Solution {
    private:
    bool knows(vector<vector<int> >& mat,int a,int b,int n){
        if(mat[a][b]==1){
            return true;
        }
        else{
            return false;
        }
    }
  public:
    // Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& mat) {
        int n=mat.size();
        stack<int>s;
        for(int i=0;i<n;i++){
            s.push(i);
        }
        while(s.size()>1){
            int a=s.top();
            s.pop();
            int b=s.top();
            s.pop();
            if(knows(mat,a,b,n)){
                s.push(b);
            }
            else{
                s.push(a);
            }
        }
        int pot=s.top();
        bool ans=false;
        int row=0;
        for(int i=0;i<n;i++){
            if(mat[pot][i]==0){
                row++;
            }
        }
        if(row==n){
            ans=true;
        }
        bool ans1=false;
        int col=0;
        for(int i=0;i<n;i++){
            if(mat[i][pot]==1){
                col++;
            }
        }
        if(col==n-1){
            ans1=true;
        }
        if(ans==true&&ans1==true){
            return pot;
        }
        else{
            return -1;
        }
    }
};
