Problem statement
Given valid mathematical expressions in the form of a string. You are supposed to return true if the given expression contains a pair of redundant brackets, else return false. The given string only contains ‘(‘, ’)’, ‘+’, ‘-’, ‘*’, ‘/’ and lowercase English letters.

Note :
A pair of brackets is said to be redundant when a subexpression is surrounded by needless/ useless brackets.

Solution:
#include <bits/stdc++.h> 
//#include<stack.h>
bool findRedundantBrackets(string &s)
{
    // Write your code here.
    stack<char>st;
    for(int i=0;i<s.length();i++){
        char ch=s[i];
        if(ch=='('||ch=='+'||ch=='-'||ch=='*'||ch=='/'){
            st.push(ch);
        }
        if(ch==')'){
           bool redundant=true;
            while(st.top()!='('){
            char top=st.top();
            if (top == '+' || top == '-' || top == '*' || top == '/') {
              redundant = false;
            }
            st.pop();
        }
        if(redundant==true){
            return true;
        }
        st.pop();
        }
       
    }
    return false;
}
